// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _378daftarkhoneh.Data;

#nullable disable

namespace _378daftarkhoneh.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("_378daftarkhoneh.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#3498db",
                            CreatedAt = new DateTime(2025, 6, 3, 20, 21, 18, 666, DateTimeKind.Local).AddTicks(94),
                            Description = "خرید، فروش، اجاره املاک",
                            Icon = "fas fa-home",
                            Name = "اسناد املاک"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#e74c3c",
                            CreatedAt = new DateTime(2025, 6, 3, 20, 21, 18, 666, DateTimeKind.Local).AddTicks(102),
                            Description = "انواع وکالتنامه‌ها",
                            Icon = "fas fa-gavel",
                            Name = "وکالتنامه"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#27ae60",
                            CreatedAt = new DateTime(2025, 6, 3, 20, 21, 18, 666, DateTimeKind.Local).AddTicks(104),
                            Description = "انواع اقرارنامه‌ها",
                            Icon = "fas fa-file-signature",
                            Name = "اقرارنامه"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#f39c12",
                            CreatedAt = new DateTime(2025, 6, 3, 20, 21, 18, 666, DateTimeKind.Local).AddTicks(106),
                            Description = "شروط ضمن عقد، طلاق",
                            Icon = "fas fa-ring",
                            Name = "ازدواج و طلاق"
                        },
                        new
                        {
                            Id = 5,
                            Color = "#9b59b6",
                            CreatedAt = new DateTime(2025, 6, 3, 20, 21, 18, 666, DateTimeKind.Local).AddTicks(108),
                            Description = "گواهی امضا، استعلام",
                            Icon = "fas fa-certificate",
                            Name = "گواهی و استعلام"
                        });
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("NationalCode")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 3, 20, 21, 18, 665, DateTimeKind.Local).AddTicks(9598),
                            Email = "admin@notary378.ir",
                            FirstName = "مدیر",
                            IsActive = true,
                            LastName = "سیستم",
                            Password = "admin123",
                            Role = 2,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.UserFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdminNote")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequestType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProcessedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.FileUpload", b =>
                {
                    b.HasOne("_378daftarkhoneh.Models.Category", "Category")
                        .WithMany("Files")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.UserFile", b =>
                {
                    b.HasOne("_378daftarkhoneh.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_378daftarkhoneh.Models.User", "ProcessedByUser")
                        .WithMany()
                        .HasForeignKey("ProcessedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("_378daftarkhoneh.Models.User", "User")
                        .WithMany("UserFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProcessedByUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.Category", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("_378daftarkhoneh.Models.User", b =>
                {
                    b.Navigation("UserFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
